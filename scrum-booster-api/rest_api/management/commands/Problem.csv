title,detail,image,can_be_solved_by
Project Estimates Are Unrealistic Or Unknown,"Prior to starting work, a Team Estimating Game or Planning Poker should be used to estimate the high-priority user stories from the Product Backlog to determine what can be part of the upcoming sprint; this will help to understand the complexity and cost of requirements. During Release and Sprint Planning, team velocity, if the team is largely unchanged, should be considered. This will enable the team to select an appropriate number of user story points to include in each Sprint.",http://www.hrinasia.com/wp-content/uploads/2016/10/Unhappy-at-work-India.jpg,Team Estimating Game (Fibonacci Game) & Planning Poker;Sprint Planning;Backlog Grooming;Release Planning
Projects Do Not Get Delivered On Schedule,"During a project, there should be regular backlog grooming to continue breaking down user stories for upcoming sprints. Some organizations have had positive results with more frequent “micro-grooming” sessions that focus on smaller user stories and tasks. As part of project monitoring, the Daily Stand Up meeting should review Burn-Down Charts to understand whether the Release/Sprint is on schedule.",http://innov8tiv.com/wp-content/uploads/2017/06/iMessage-not-delivered.png,Daily Standup/Daily Scrum;Release Burn-Down Chart;Sprint Burn-Down Chart
Requirements Are Always Changing,"A project should have a Product Backlog to track all user stories (requirements). The Product Owner (customer) is responsible for keeping this backlog up to date, so if requirements change the backlog should be updated. During each Sprint Planning session, user stories are selected to be included. When Sprint Planning is completed, the Sprint Backlog should be frozen. Any changes that come in during the Sprint/Iteration should go into the Product Backlog. During a project, there should be regular backlog grooming to continue breaking down user stories for upcoming sprints.",http://blog.qatestlab.com/wp-content/uploads/2011/08/What-Should-You-Do-if-Requirements-Rre-Changing-Constantly.jpg,Backlog Grooming;Sprint Planning;Product Backlog;Product Backlog;User Stories;Definition of Done
Customers Won’t Commit To Project,The Scrum Product Owner (SPO) is either the customer or a customer representative/advocate. The SPO is a primary participant in Release Planning and Sprint Planning sessions where user stories are selected to be worked on. The project work should not begin unless the SPO agrees with the user stories that were selected. All User Stories should have acceptance criteria defined. During each Sprint/Iteration there is a Sprint Demo / Review where the work that has been completed is presented to the customer for acceptance.,https://commitmentconnection.com/wp-content/uploads/2017/01/The-Truth-About-Why-He-Won%E2%80%99t-Commit-to-You-600x300.jpg,Release Planning;Sprint Planning
Customers Are Frustrated With Progress,"When a customer is a Product Owner of a project, they will be part of the team and less likely to be frustrated. The Product Owner should regularly participate in Release Planning, Sprint Planning, and Sprint Demo/Reviews so they are always up to date on project status and have ample opportunity to express concerns. The project should identify a Definition of Done for each user story to ensure things like acceptance criteria and test cases are consistently completed.",https://i.imgur.com/NCvIyir.png,Release Planning;Sprint Planning;Sprint Demo/Sprint Review
Customers Are Not Satisfied With The End Product,"All user stories should have acceptance criteria that can be verified. Validation of user stories should occur during the Sprint Demo/Review. If both of these things don’t satisfy the customer, then a new user story should be added to the Product Backlog so it can be addressed in the future.",http://m.mystarjob.com/archives/2014/11/26/mystarjob_news/9164067_M.jpg,Definition of Done;User Stories;Epics;Test Driven Development;Sprint Demo/Sprint Review
There Are Too Many Bugs During A Project Or Post Project,"Continuous Build / Continuous Integration, Test-Driven Development, and Pair Programming are techniques that can improve the quality of deliverables. User Stories should always have acceptance criteria identified prior to work beginning. This will ensure that appropriate test cases can be created. All agile teams should have a Definition of Done that includes guidance for how to progress a user story and when it can be closed. This may include guidance on testing and bugs.
Bugs found during a Sprint / Iteration can be addressed several ways. They should be discussed in the Daily Stand Up and the project team should determine whether the bug can be resolved during the Sprint / Iteration or not. If a story closed with a bug, then a new user story can be created to address the known bug in the Product Backlog. Refactoring can also be used to improve the product, but only if a conscious decision is made to deliver lower quality code during sprint planning, with a plan to redesign or re-code at a later date to improve code quality. Technical Debt should be considered when planning a project so that the team makes time for bug fixes and technical improvements that are needed for longevity of the product.
",https://image.shutterstock.com/image-vector/bug-search-binary-code-450w-491349163.jpg,Test Driven Development;Continuous Build/Integration;Refactoring
Unable To Secure Or Retain Project Resources,"During Release Planning, work to ensure that you have enough team members with the right skill set for the project. During the project, if there is a resource issue that is creating an impediment it should be raised at the Daily Stand Up.",https://www.retaininternational.com/assets/img/desktop_kpis.png,Team Agreements;Release Planning;Daily Standup/Daily Scrum
Lack Of Internal And External Support For Project,"The Project Team should be included in Release and Sprint Planning sessions; this will help ensure that everyone buys into the project. Project Teams can create a Team Agreement to help provide guidance for team behavior. During a project, all concerns should be raised during the Daily Stand Up.",https://images.yourstory.com/cs/wordpress/2017/05/160-Share-knowledge.png?fm=png&auto=format?fm=png&auto=format,Team Agreements;Release Planning;Daily Standup/Daily Scrum;Sprint Planning
Poor Project Communication,"One of the primary advantages of adopting agile approaches is the superior way it deals with real-time communications. Agile ceremonies and techniques such as Release / Sprint Planning, Daily Stand Up, Spring Demo / Reviews, and Retrospectives encourage communication between team members on a daily, incremental basis. Any additional decisions regarding frequency of communication can be captured in the Team Agreement.",http://blogs.cfainstitute.org/investor/files/2016/09/Poor-Communication-Hurts-Performance.png,Daily Standup/Daily Scrum;Release Planning;Sprint Planning;Sprint Demo/Sprint Review
Requirements Are Vague Or Open-ended,"An Epic is a type of User Story that is normally considered high level, complex, or not completely described. Epics should be refined during Backlog Grooming or Release Planning sessions until it is detailed enough to be estimated. All user stories (requirements) should be estimated and include a Definition of Done prior to being selected in a Sprint Planning session. The project team Definition of Done should include criteria for an acceptable user story.",https://blog.mrhgestao.com.br/wp-content/uploads/2017/09/123047-sera-que-escolhi-a-carreira-certa-saiba-como-tirar-essa-duvida-649x519.jpg,User Stories;Epics;Definition of Done;Backlog Grooming
Project Team Responsibilities Are Not Clear,"The project team responsibilities may be included in the Team Agreement or Definition of Done. During the Spring Planning session, all user stories should be broken into tasks and an owner self-subscribes for the work. During a Sprint/Iteration each team member is responsible for reporting on their self-assigned tasks.",https://www.projectsmart.co.uk/img/manpower.png,Team Agreements;Sprint Planning;Release Planning
Project Team Member Training Is Inadequate For The Task,"During Release Planning, when the team members begin to understand the scope and content of the Release, training needed for team members should be identified and considered during planning.",https://erikaherman.com/wp-content/uploads/2016/02/dreamstimeextrasmall_34954535.jpg,Release Planning
Failure To Foresee Potential Problems,"The daily standup (daily scrum) is an excellent tool for teams to incrementally and iteratively identify risks and issues. Scrum Masters should take care to elicit these risks and issues proactively from team members, lest they fall into the plain “what I did, what I’m doing, what’s blocking me” routine without providing important content. It is important that risks and issues are raised and discussed during Daily Stand Ups. Anything that qualifies as technical debt should also be added to the Product Backlog as a Risk and captured as a Story or some other unit of work.","https://media.newyorker.com/photos/590965b6ebe912338a375894/master/w_727,c_limit/130325_r23312_p886.jpg",Daily Standup/Daily Scrum;Release Planning;Sprint Demo/Sprint Review
Project Information Isn’t Available When Needed,"The Daily Standup should, in fact, occur daily for approximately 15 minutes. The Daily Standup should be attended by core Scrum Team members, the Product Owner, and other relevant stakeholders as planned. The Daily Standup should not be canceled simply because a team member may not be available at that time on any given day. All user stories should be well understood, estimated, include acceptance criteria, and be able to be completed during a Sprint. The project team Definition of Done should include criteria for an acceptable user story size. During Spring Planning, all User Stories should be broken down into tasks. Once this level of detail is achieved, progress is tracked with a Burn Down Chart. This should ensure that project progress is being tracked at an appropriate level.",https://www.sugaroutfitters.com/assets/img/blog/data-not-available-error.png,User Stories;Epics;Sprint Planning;Release Planning;Daily Standup/Daily Scrum;Sprint Burn-Down Chart;Release Burn-Down Chart;Sprint Demo/Sprint Review
Code Quality Is Poor,"There are several agile techniques for improving code quality, including Pair Programming, a construct where one person codes and the other “navigates” and monitors code quality, and Continuous Build/Integration where automated regression testing will lead to improved final builds.",https://2.bp.blogspot.com/-m-Bkg3LXUW4/V2gAjK9uraI/AAAAAAAC25c/xR3MAwqOLToDOh6k6jDaZZC2qmQT9EwCACLcB/s1600/Poor-Software-Quality.jpg,Test Driven Development;Continuous Build/Integration;Sprint Demo/Sprint Review;Definition of Done
Organizational Performance Isn’t Improving,"Central to all agile approaches is the concept of the Retrospective. “Retros” are useful for iteratively and incrementally improving team performance, but are weak in affecting enterprise-wide change.",http://altrumreconnaissance.com/wp-content/uploads/2016/02/admin-ajax-2.jpeg,Sprint Demo/Sprint Review