stages:
#  - linter
  - test
  - deploy
  - show

variables:
  DOCKER_IMAGE_NAME: "registry.docker.ppl.cs.ui.ac.id/ppld1"
  APP_NAME: "scrum-booster"

#FlutterLint:
#  stage: linter
#  image: jro7/flutter_lcov
#  script:
#    - flutter analyze
#  except:
#    changes:
#    - scrum-booster-api/**/*

FlutterTest:
  stage: test
  image: jro7/flutter_lcov
  script:
  - echo Testing $APP_NAME
  - flutter doctor -v
  - flutter test --coverage
  - lcov --summary coverage/lcov.info
  - genhtml coverage/lcov.info --output=coverage
  coverage: '/lines......: \d+\.\d+\%/'
  except:
    changes:
    - scrum-booster-api/**/*
  artifacts:
    name: mobile-coverage
    paths:
    - $CI_PROJECT_DIR/coverage

BackendTest:
  stage: test
  image: python:3.6
  only:
    changes:
      - scrum-booster-api/**/*
  before_script:
    - cd scrum-booster-api
    - pip install -r requirements.txt
    - python manage.py makemigrations
    - python manage.py migrate
    - python manage.py collectstatic --no-input
    - python manage.py runserver 8000 &
  when: on_success
  script:
    - coverage run manage.py test
    - coverage report -m

BackendLinterTest:
  stage: test
  image: python:3.6
  script:
    - cd scrum-booster-api
    - pip install pylint
    - pylint ./

BackendDeployToProduction:
  variables:
    ENV_NAME: "production"
  stage: deploy
  image: gitlab/dind:latest
  only:
    changes:
      - scrum-booster-api/**/*
    refs:
      - master
  before_script:
    - docker info
  script:
    - DOCKER_IMAGE_TAG=$DOCKER_IMAGE_NAME/scrumboosterapi/$ENV_NAME
    - docker build -t $DOCKER_IMAGE_TAG ./scrum-booster-api
    - docker push $DOCKER_IMAGE_TAG
  tags:
    - docker
    - build
  environment:
    name: production

BackendDeployToStaging:
  variables:
    ENV_NAME: "staging"
  stage: deploy
  image: gitlab/dind:latest
  only:
    changes:
      - scrum-booster-api/**/*
    refs:
      - staging
  before_script:
    - docker info
  script:
    - DOCKER_IMAGE_TAG=$DOCKER_IMAGE_NAME/scrumboosterapi/$ENV_NAME
    - docker build -t $DOCKER_IMAGE_TAG ./scrum-booster-api
    - docker push $DOCKER_IMAGE_TAG
  tags:
    - docker
    - build
  environment:
    name: staging

BackendDeployToDevelopment:
  variables:
    ENV_NAME: "development"
  stage: deploy
  image: gitlab/dind:latest
  only:
    changes:
      - scrum-booster-api/**/*
    refs:
      - /^US-.*$/
  before_script:
    - docker info
  script:
    - DOCKER_IMAGE_TAG=$DOCKER_IMAGE_NAME/scrumboosterapi/$ENV_NAME
    - docker build -t $DOCKER_IMAGE_TAG ./scrum-booster-api
    - docker push $DOCKER_IMAGE_TAG
  tags:
    - docker
    - build
  environment:
    name: development

FlutterDeployToProduction:
  variables:
    ENV_NAME: "production"
  image: runmymind/docker-android-sdk:latest
  stage: deploy
  tags:
    - docker
    - build
  only:
    refs:
      - master
  before_script:
    - wget --quiet --output-document=flutter.tar.xz https://storage.googleapis.com/flutter_infra/releases/stable/linux/flutter_linux_v1.0.0-stable.tar.xz && tar xf flutter.tar.xz -C /
    - export PATH=$PATH:/flutter/bin
    - apt-get update && apt-get install gnupg -y
    - curl -sL https://deb.nodesource.com/setup_11.x | bash - && apt-get install -y nodejs
    - flutter doctor -v
    - flutter packages get
    - npm install --global appcenter-cli
  script:
    - flutter build apk --release --build-name=$APP_NAME --build-number=1
    - appcenter
    - appcenter login --token $APP_CENTER_API_KEY
    - appcenter distribute release -f build/app/outputs/apk/release/app-release.apk --app $APP_CENTER_APP_NAME_PROD --group $APP_CENTER_GROUP_TARGET
  environment:
    name: production

FlutterDeployToStaging:
  variables:
    ENV_NAME: "staging"
  image: runmymind/docker-android-sdk:latest
  stage: deploy
  tags:
    - docker
    - build
  only:
    refs:
      - staging
  before_script:
    - wget --quiet --output-document=flutter.tar.xz https://storage.googleapis.com/flutter_infra/releases/stable/linux/flutter_linux_v1.0.0-stable.tar.xz && tar xf flutter.tar.xz -C /
    - export PATH=$PATH:/flutter/bin
    - apt-get update && apt-get install gnupg -y
    - curl -sL https://deb.nodesource.com/setup_11.x | bash - && apt-get install -y nodejs
    - flutter doctor -v
    - flutter packages get
    - npm install --global appcenter-cli
  script:
    - flutter build apk --release --build-name=$APP_NAME-$ENV_NAME --build-number=1
    - appcenter
    - appcenter login --token $APP_CENTER_API_KEY
    - appcenter distribute release -f build/app/outputs/apk/release/app-release.apk --app $APP_CENTER_APP_NAME_STAGING --group $APP_CENTER_GROUP_TARGET
  environment:
    name: staging

FlutterDeployToDevelopment:
  variables:
    ENV_NAME: "development"
  image: runmymind/docker-android-sdk:latest
  stage: deploy
  tags:
    - docker
    - build
  only:
    refs:
      - /^US-.*$/
  except:
    changes:
      - scrum-booster-api/**/*
  before_script:
    - wget --quiet --output-document=flutter.tar.xz https://storage.googleapis.com/flutter_infra/releases/stable/linux/flutter_linux_v1.0.0-stable.tar.xz && tar xf flutter.tar.xz -C /
    - export PATH=$PATH:/flutter/bin
    - apt-get update && apt-get install gnupg -y
    - curl -sL https://deb.nodesource.com/setup_11.x | bash - && apt-get install -y nodejs
    - flutter doctor -v
    - flutter packages get
    - npm install --global appcenter-cli
  script:
    - flutter build apk --release --build-name=$APP_NAME-$ENV_NAME --build-number=1
    - appcenter
    - appcenter login --token $APP_CENTER_API_KEY
    - appcenter distribute release -f build/app/outputs/apk/release/app-release.apk --app $APP_CENTER_APP_NAME_DEV --group $APP_CENTER_GROUP_TARGET
  environment:
    name: development

FlutterDeployToColdfix:
  variables:
    ENV_NAME: "coldfix"
  image: runmymind/docker-android-sdk:latest
  stage: deploy
  tags:
    - docker
    - build
  only:
    refs:
      - /^coldfix-.*$/
  except:
    changes:
      - scrum-booster-api/**/*
  before_script:
    - wget --quiet --output-document=flutter.tar.xz https://storage.googleapis.com/flutter_infra/releases/stable/linux/flutter_linux_v1.0.0-stable.tar.xz && tar xf flutter.tar.xz -C /
    - export PATH=$PATH:/flutter/bin
    - apt-get update && apt-get install gnupg -y
    - curl -sL https://deb.nodesource.com/setup_11.x | bash - && apt-get install -y nodejs
    - flutter doctor -v
    - flutter packages get
    - npm install --global appcenter-cli
  script:
    - flutter build apk --release --build-name=$APP_NAME-$ENV_NAME --build-number=1
    - appcenter
    - appcenter login --token $APP_CENTER_API_KEY
    - appcenter distribute release -f build/app/outputs/apk/release/app-release.apk --app $APP_CENTER_APP_NAME_COLDFIX --group $APP_CENTER_GROUP_TARGET
  environment:
    name: coldfix

FlutterShowCoverage:
  image: alpine
  stage: show
  dependencies:
    - FlutterTest
  script:
    - mkdir -p mobile-coverage/
    - mv coverage/* mobile-coverage/
  artifacts:
    paths:
    - $CI_PROJECT_DIR/mobile-coverage/
  except:
    changes:
      - scrum-booster-api/**/*